package com.mygdx.aoc.android;

import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.InterstitialAd;


//Implements a controller for ads.
public class AdManager {

//    A class where the elapsed time between the opening and closing of an Ad can be retrieved.
    private class MyAdListener extends AdListener {

        public long start = -1, end = -1;

//        Opening event.
        @Override
        public void onAdOpened() {
            start = System.nanoTime();
            end = -1;
            super.onAdOpened();
        }

//        Closing event.
        @Override
        public void onAdClosed() {
            end = System.nanoTime();
            super.onAdClosed();
        }

//        Calculates the elapsed time.
        public double elapsedTime() {
            if (end < 0 || start < 0)
                return -1;
            long elapsed = end - start;
            double seconds = (double)elapsed / 1000000000.0; // Converting to seconds
            start = end = -1;
            return seconds;
        }
    }

    private InterstitialAd mInterstitialAd;
    private MyAdListener mAdListener = new MyAdListener();

    public void init(InterstitialAd interstitial) {
//        Constructs an InterstitialAd object and set its ad unit ID.
        mInterstitialAd = interstitial;
        mInterstitialAd.setAdUnitId("ca-app-pub-3940256099942544/1033173712"); //This ID needs to be generated by AdMob.
        mInterstitialAd.setAdListener(mAdListener);

    }

    public void displayAd() {
//        Checks that an ad is loaded and then display it.
        if (mInterstitialAd.isLoaded()) {
            mInterstitialAd.show();
        }
    }

    public void requestAd() {
//        Requests an ad.
        AdRequest adRequest = new AdRequest.Builder()
                .addTestDevice(AdRequest.DEVICE_ID_EMULATOR)
                .build();
//        Um id gerado para uma conta no AdMob deve ser colado no lugar de
//        AdRequest.DEVICE_ID_EMULATOR entre aspas quando o aplicativo estiver
//        pronto para ir para a Play Store.
        mInterstitialAd.loadAd(adRequest);
    }

//    Returns the elapsed time.
    public double elapsedTime() {
        return mAdListener.elapsedTime();
    }
}
